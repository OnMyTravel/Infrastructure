- name: Updating APT-GET informations
  apt: update_cache=yes
  become: true

- name: Install nginx
  apt: name=nginx state=present
  become: true

- name: Create certificate folder
  file: path={{ certificate_folder }} state=directory owner={{ remote_user }} group={{ remote_user }}
  become: true

- name: Upload nginx certificate .crt file
  copy: src={{ local_ssl_certificate }} dest={{ ssl_certificate_path }} owner={{ remote_user }} group={{ remote_user }}
  become: true

- name: Upload nginx certificate .key file
  copy: src={{ local_ssl_keypath }} dest={{ ssl_keyfile_path }} owner={{ remote_user }} group={{ remote_user }}
  become: true

- name: Create log directory
  file: path={{nginx_error_path}} state=directory owner={{ remote_user }} group={{ remote_user }}
  become: true

- name: Create main site configuration file
  template: src=nginx.conf.j2 dest={{ nginx_configuration_file }}
  become: true
  notify:
    - restart_nginx

- name: Disable the default configuration
  file: path=/etc/nginx/sites-enabled/default state=absent
  become: true

- name: Set site configuration
  template: src=site.conf.j2 dest={{ site_configuration_file }}
  become: true
  notify:
    - restart_nginx

- name: Create api subdomain configuration file
  template: src=api.subdomain.conf.j2 dest={{ api_configuration_file }}
  become: true
  notify:
    - restart_nginx

- name: Enable sites
  file: src={{ item.src }} dest={{ item.dest }} state=link
  with_items:
    - { src: '{{ site_configuration_file }}', dest: '/etc/nginx/sites-enabled/onmy.travel' }
    - { src: '{{ api_configuration_file }}', dest: '/etc/nginx/sites-enabled/api.onmy.travel' }
  become: true
  notify:
    - restart_nginx

- name: Start nginx
  service: name=nginx state=started enabled=yes
  become: true
